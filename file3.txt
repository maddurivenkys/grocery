// check the state list is null before submitting
    let statesListMissing:any=[];
    statesListMissing = reqBody.location ? reqBody.location['stateName'] ? 
    reqBody.location['stateName']: []
       :[];

    // for local testing
    //statesListMissing =['Albama','Wisconsin','null', null];
    let stateListMissing: boolean = false; 
    if(statesListMissing && statesListMissing.length > 0){
       statesListMissing.forEach( (state) => {
          if(state == null || state === 'null') stateListMissing = true;
       });
    }

    if(stateListMissing){
      this.createRuleResponseMessage = {
        show: true,
        text: 'State Lists are missing. Please update that section to proceed further.'
      };
      return; 
    }

openapi: 3.0.0
info:
  title: Fraud Exclusions Management API
  description: |
    The purpose of this API is to update, replace, or delete fraud exclusions.
  contact:
    name: Doozers
    email: Doozers@fisglobal.com
  license:
    name: FIS Proprietary
  version: 1.0.0
servers:
  - url: unknown
paths:
  /query/fraudexclusionshistroy:
    post:
      summary: Return all history exclusions associated with a card
      operationId: searchHistory
      description: Fetches fraud exclusions from the system
      responses:
        '200':
          description: A list of exclusions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudExclusionResponse'
        '400':
          description: 'Invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudExclusionRequestItem'
        description: Fetches one or more items based on criteria   
  /query/exclusions:
    post:
      summary: Return all active (current and future) travel associated with a card
      operationId: search
      description: Fetches fraud travel from the system
      parameters:
        - name: uuid
          in: header
          description: Unique identifier for the request
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
            type: string
            example: "35fb301b-187f-4162-ac51-3d78109162cd"
        - name: switch-id
          in: header
          description: Switch ID
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 10
            minLength: 4
            type: string
            example: "FISB"
      responses:
        '200':
          description: A list of travel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudExclusionResponse'
        '400':
          description: 'Invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudExclusionRequestItem'
        description: Fetches one or more items based on criteria
  /query/exclusionshistory:
    post:
      summary: Return all active (current and future) travel associated with a card
      operationId: search history
      description: Fetches fraud travel from the system
      responses:
        '200':
          description: A list of travel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudExclusionResponse'
        '400':
          description: 'Invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudExclusionRequestItem'
        description: Fetches one or more items based on criteria      
  /query/exclusionactivecount:
    post:
      summary: Return number of active records for given search
      operationId: searches active count
      description: Fetches count from the system for given input
      responses:
        '200':
          description: A list of travels
          content:
            application/json:
              schema:
                type: object
                properties: 
                  count: 
                    type: integer
                    example: 1000
        '400':
          description: 'Invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudExclusionRequestItem'
        description: Fetches the active count of  items based on criteria  
  /fraudexclusion:
    post:
      tags:
        - Fraud Exclusion Management API
      summary: Adds one fraud exclusion
      description: Adds one fraud exclusion to a specific card.
      parameters:
        - in: header
          name: uuid
          description: Unique identifier for the request
          schema:
            type: string
            example: 35fb301b-187f-4162-ac51-3d78109162cd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddExclusionRequest"
            examples:
              sample:
                summary: Sample Request
                value:
                  {
                    "pan": { "plainText": "1616100000010004" },
                    "exclusionType": "",
                    "countryCode": "",
                    "stateCode": "",
                    "MCC": "",
                    "startDate": "2019-11-08:14:12:03.130000",
                    "endDate": "2019-11-08:14:12:03.130000",
                    "addedByUser": "",
                    "portfolio": "FIB1840254029"
                  }
      responses:
        200:
          description: Exclusion successfully added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddExclusionResponse"
              examples:
                sample:
                  summary: Sample Response
                  value:
                    {
                      "entity": { "exclusionId": "" },
                      "metadata":
                        { "msgLst": [{ "code": "00", "text": "SUCCESS" }] }
                    }
  /fraudexclusion/{exclusionid}:
    patch:
      tags:
        - Fraud Exclusion Management API
      summary: Update any information in an API.
      description: |
        This will allow you to Update existing exclusion
      parameters:
        - in: header
          name: uuid
          description: Unique identifier for the request
          schema:
            type: string
            example: 35fb301b-187f-4162-ac51-3d78109162cd
        - in: path
          name: exclusionid
          schema:
            type: string
            example: 123415123123
          description: The ID of the exclusion to be updated
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateExclusionRequest"
            examples:
              sample1:
                summary: Sample Request
                value:
                  {
                    "pan": { "plainText": "1616100000010004" },
                    "exclusionType": "",
                    "countryCode": "",
                    "stateCode": "",
                    "MCC": "",
                    "startDate": "2019-11-08:14:12:03.130000",
                    "endDate": "2019-11-08:14:12:03.130000",
                    "lastUpdatedUser": "",
                    "portfolio": "FIB1840254029"
                  }
      responses:
        200:
          description: Exclusion successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateExclusionResponse"
              examples:
                sample1:
                  summary: Sample Response
                  value:
                    {
                      "entity": {},
                      "metadata":
                        { "msgLst": [{ "code": "00", "text": "SUCCESS" }] }
                    }
    delete:
      tags:
        - Fraud Exclusion Management API
      summary: Delete a fraud exclusion
      description: Delete a fraud exclusion by ID
      parameters:
        - in: header
          name: uuid
          description: Unique identifier for the request
          schema:
            type: string
            example: 35fb301b-187f-4162-ac51-3d78109162cd
        - in: path
          name: exclusionid
          schema:
            type: string
            example: 123415123123
          description: The ID of the exclusion to be deleted
          required: true
        - in: query
          name: deletedUserId
          schema:
            type: string
            example: someuser
          description: The user who deleted the exclusion
          required: true
      responses:
        200:
          description: Exclusion successfully deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteExclusionResponse"
components:
  schemas:
    FraudExclusionRequestPayload:
      type: object
      required:
        - pan
        - portfolio
        - exclusionType
        - exclusionValue
        - startDate
        - endDate
      properties:
        pan:          
          type: string
          example: '545354534534455'
        portfolio:
          type: string
          maximum: 14
          example: 'FIB1234567890'
        exclusionType:
          type: string
          enum:
            - 'M'
            - 'S'
            - 'C'
            - 'V'            
          maximum: 1
          example: 'M'
        MCC:
          type: string
          maximum: 4
          example: '0780'
        countryCode:
          type: string
          maximum: 3
          example: '020'
        stateCode:
          type: string
          maximum: 2
          example: 'AB'
        startDate:
          type: string
          maximum: 18
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{2}'
          description: 'From Date means starting the date range from the beginning of that day 00:00:00 AM and format is yyyy-MM-dd:HH24:mm:ss'
          example: '2023-05-19:21:54:16'       
        endDate:
          type: string
          maximum: 18
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{2}'
          description: 'From Date means starting the date range from the beginning of that day 12:00:00 AM and format is  yyyy-MM-dd:HH24:mm:ss'
          example: '2023-05-21:21:54:16'
        addedByUser:
          type: string
          maximum: 9
          example: 'venkat'
    FraudExclusionResponse:
      type: object
      properties:        
        total:
          type: integer
          example: 2000
        exclusions:
          type: array
          items: 
            $ref: '#/components/schemas/FraudExclusionResponseItem'
    FraudExclusionResponseItem:
      type: object           
      properties:
        pan:
          type: string
          example: '545354534534455'
        portfolio:
          type: string
          maximum: 14
          example: 'FIB1234567890'
        segmentID:
          type: string
          maximum: 1
          enum: 
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
          example: '1'
        segmentValue:
          type: string
          maximum: 1
          example: 'S'
        startDate:
          type: string
          maximum: 18
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{4}'
          description: 'Date format is  yyyy-MM-dd:HH24:mm:ss'
          example: '2023-05-19:21:54:16'
        endDate:
          type: string
          maximum: 18
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{4}'
          description: 'Date format is  yyyy-MM-dd:HH24:mm:ss.SSSS'
          example: '2023-05-21:21:54:16.3451'
        addedByUser:
          type: string
          maximum: 9
          example: 'venkat'
        lastAction:
          type: string
          maximum: 1
          example: 'I'
          enum:
            - 'I'
            - 'U'
            - 'D'
        lastActionDateTime:
          type: string
          maximum: 18
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{4}'
          description: 'Date format is  yyyy-MM-dd:HH24:mm:ss.SSSS'
          example: '2023-05-21:21:54:16.3451'
    FraudExclusionRequestItem:
      type: object
      required:
        - portfolio
        - pageNumber
        - pageSize       
      properties:
        pan:          
          type: string
          example: '545354534534455'
        portfolio:
          type: string
          maximum: 14
          example: 'FIB1234567890'
        exclusionType:
          type: string
          enum:
            - 'M'
            - 'S'
            - 'C'
            - 'V'            
          maximum: 1
          example: 'M-MCC , S-State , C-Country and V-VIP'
        startDateFrom:
          type: string
          maximum: 18
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{2}'
          description: 'From Date means starting the date range from the beginning of that day 12:00:00 AM and format is  yyyy-MM-dd:HH24:mm:ss'
          example: '2023-05-19:21:54:16'
        startDateTo:
          type: string
          maximum: 18
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{2}'
          description: 'To Date means ending the range on that day 11:59:59PM and format is  yyyy-MM-dd:HH24:mm:ss'
          example: '2023-05-21:21:54:16'
        endDateFrom:
          type: string
          maximum: 18
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{2}'
          description: 'From Date means starting the date range from the beginning of that day 12:00:00 AM and format is  yyyy-MM-dd:HH24:mm:ss'
          example: '2023-05-19:21:54:16'
        endDateTo:
          type: string
          maximum: 18
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{2}'
          description: 'From Date means starting the date range from the beginning of that day 12:00:00 AM and format is  yyyy-MM-dd:HH24:mm:ss'
          example: '2023-05-21:21:54:16'
        addedByUser:
          type: string
          maximum: 9
          example: 'venkat'
        pageNumber: 
          type: number
          description: page number to retrieve the records matching given criteria
          example: greater than or equal to 0
        pageSize:
          type: number
          description: number of records to be returned per page
          example: 100    
    FraudExclusionEndRequestPayload:
      type: object
      properties:
        portfolio:
          type: string
          maximum: 14
          example: 'FIB1234567890'
        travelID:
          type: string
          maximum: 1
          enum: 
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
          example: '1'
        endDate:
          type: string
          maximum: 18
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{2}'
          description: 'Date format is  yyyy-MM-dd:HH24:mm:ss'
          example: '2023-05-21:21:54:16'
    FraudExclusionDel:
      type: object
      properties:
        exclusionID:
          type: string
          maximum: 15
          example: '168544940218300'
        userID:
          type: string
          maximum: 9
          example: 'venkat'
    AddExclusionRequest:
      type: object
      description: Request for adding an exclusion
      properties:
        pan:
          $ref: "#/components/schemas/PAN"
        exclusionType:
          type: string
          description: |
            The type of the exclusion to add.
            <dl>
              <dt>CC</dt><dd>Country CODE</dd>
              <dt>SC</dt><dd>State CODE</dd>
              <dt>MCC</dt><dd>Merchant Category Code</dd>
            </dl>
          maxLength: 3
        countryCode:
          type: string
          default: false
          description: "Country Code"
        stateCode:
          type: string
          description: "State Code"
        MCC:
          type: string
          description: Merchant Category Code
        startDate:
          type: string
        endDate:
          type: string
        addedByUser:
          type: string
      required:
        - pan
        - exclusionType
        - startDate
        - endDate
        - addedByUser
    UpdateExclusionRequest:
      type: object
      properties:
        exclusionType:
          type: string
          description: |
            The type of the exclusion to update.
            <dl>
              <dt>CC</dt><dd>Country CODE</dd>
              <dt>SC</dt><dd>State CODE</dd>
              <dt>MCC</dt><dd>Merchant Category Code</dd>
            </dl>
          maxLength: 3
        pan:
          $ref: "#/components/schemas/PAN"
        countryCode:
          type: string
          default: false
          description: "Country Code"
        stateCode:
          type: string
          description: State Code
        MCC:
          type: string
          description: Merchant Category Code
        startDate:
          type: string
        endDate:
          type: string
        lastUpdatedUser:
          type: string
      required:
        - pan
        - exclusionType
        - startDate
        - endDate
        - lastUpdatedUser

    AddExclusionResponse:
      type: object
      description: Response for adding an exclusion
      properties:
        entity:
          $ref: "#/components/schemas/FraudExclusionDel"
        metadata:
          $ref: "#/components/schemas/MetaData"
    UpdateExclusionResponse:
      type: object
      description: Response for updating an exclusion
      properties:
        entity:
          $ref: "#/components/schemas/FraudExclusionDel"
        metadata:
          $ref: "#/components/schemas/MetaData"
    DeleteExclusionResponse:
      type: object
      description: Response for deleting an exclusion
      properties:
        entity:
          $ref: "#/components/schemas/FraudExclusionDel"
        metadata:
          $ref: "#/components/schemas/MetaData"
    MetaData:
      type: object
      description: The response metadata
      properties:
        msgLst:
          type: array
          items:
            $ref: "#/components/schemas/Msg"
    Msg:
      type: object
      description: The response message
      properties:
        code:
          type: string
          description: The message code
          maxLength: 2
        text:
          type: string
          description: The message text
          maxLength: 128
    PAN:
      type: object
      description: The Primary Account Number
      properties:
        plainText:
          type: string
          maxLength: 19
        encryptedText:
          type: string
          maxLength: 512
    Travel:
      type: object
      description: The travel information
      properties:
        travelID:
          type: string
          description: The travel ID
        travelValue:
          type: string
          description: The travel value
    TravelEndRequestPayload:
      type: object
      description: The request payload for ending travel
      properties:
        travelID:
          type: string
          description: The travel ID
        endDate:
          type: string
          description: The end date of the travel
    DeleteTravelRequestPayload:
      type: object
      description: The request payload for deleting a travel
      properties:
        travelID:
          type: string
          description: The travel ID
        userID:
          type: string
          description: The user ID who deleted the travel
