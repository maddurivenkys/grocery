Here's the Swagger document with corrected syntax issues:

```yaml
openapi: 3.0.0
info:
  title: Query API for Segmentation
  description: Query API for segmentation from Fraud middleware
  version: 1.0.0
  contact:
    name: FIS
    email: Doozers@fisglobal.com
  license:
    name: FIS
    url: 'TBD'
servers:
  - url: https://fraudmiddleware.fisglobal.com
paths:
  /api/fraudsegment:
    post:
      summary: Adds a portfolio to segmentation
      operationId: addSegmentationRecord
      description: Add fraud segment in the system
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudSegmentResponsePayload'
        '400':
          description: 'Invalid input, object invalid'
        '500':
          description: 'Bad Gateway'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudSegmentRequestPayload'
  /api/fraudsegment/{exclusionId}:
    put:
      summary: Updates the portfolio of segmentation
      operationId: updateSegmentationRecord
      description: Update fraud segment in the system
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudSegmentResponsePayload'
        '400':
          description: 'Invalid input, object invalid'
        '500':
          description: 'Bad Gateway'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudSegmentRequestPayload'
        description: Fetches one or more items based on criteria
    delete:
      summary: Deletes portfolio from segmentation
      operationId: deleteSegmentationRecord
      description: Delete fraud segment in the system
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudSegmentResponsePayload'
        '400':
          description: 'Invalid input, object invalid'
        '500':
          description: 'Bad Gateway'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudSegmentRequestPayload'
        description: Deletes one or more items based on criteria
  /api/fraudsegmentend:
    post:
      operationId: setEndDateForSegment
      summary: Set the end date to all cards that belong to that portfolio and segment ID
      description: Set the end date to all cards that belong to that portfolio and segment ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - 'success'
                      - 'failed'
        '400':
          description: 'Invalid input, object invalid'
        '500':
          description: 'Bad Gateway'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudSegmentEndRequestPayload'
        description: Fetches one or more items based on criteria
  /query/fraudsegment:
    post:
      summary: Return all active (current and future) segments associated with a card
      operationId: fraudsegment
      description: Fetches fraud segment from the system
      responses:
        '200':
          description: A list of segments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudSegmentResponse'
        '400':
          description: 'Bad Request'
        '500':
          description: 'Bad Gateway'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudSegmentRequestItem'
        description: Fetches one or more items based on criteria
  /query/pagedfraudsegment:
    post:
      summary: Return all active (current and future) segments associated with a card
      operationId: pagedfraudsegment
      description: Fetches fraud segment from the system
      responses:
        '200':
          description: A list of segments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudSegmentPagedResponse'
        '400':
          description: 'Bad Request'
        '500':
          description: 'Bad Gateway'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudSegmentRequestItem'
  /query/fraudsegmentactivecount:
    post:
      summary: Return number of active records for given search
      operationId: searchActiveCount
      description: Fetches count from the system for given input
      responses:
        '200':
          description: A list of segments
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1000
        '400':
          description: 'Bad Request'
        '500':
          description: 'Bad Gateway'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudSegmentActiveCountRequest'
  /query/fraudsegmenthistory:
    post:
      summary: Return all history segments associated with a card
      operationId: searchHistory
      description: Fetches fraud segment from the system
      responses:
        '200':
          description: A list of segments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudSegmentHistoryResponse'
        '400':
          description: 'Bad Request'
        '500':
          description: 'Bad Gateway'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudSegmentHistoryRequestItem'
  /query/pagedfraudsegmenthistory:
    post:
      summary: Return all history segments associated with a card
      operationId: pagedfraudsegmenthistory
      description: Fetches fraud segment from the system
      responses:
        '200':
          description: A list of segments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudSegmentHistoryPagedResponse'
        '400':
          description: 'Bad Request'
        '500':
          description: 'Bad Gateway'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudSegmentHistoryRequestItem'
components:
  schemas:
    FraudSegmentRequestPayload:
      type: object
      required:
        - pan
        - portfolio
        - segmentID
        - segmentValue
        - startDate
      properties:
        pan:
          $ref: '#/components/schemas/PAN'
        portfolio:
          type: string
          maxLength: 14
          example: 'FIB1234567890'
        segmentID:
          $ref: '#/components/schemas/SegmentID'
        segmentValue:
          type: string
          maxLength: 1
          example: 'S'
        startDate:
          $ref: '#/components/schemas/DateObj'
        endDate

:
          $ref: '#/components/schemas/DateObj'
        addedByUser:
          type: string
          maxLength: 9
          example: 'venkat'
    FraudSegmentResponsePayload:
      type: object
      required:
        - status
        - recordId
        - pan
      properties:
        entity:
          $ref: '#/components/schemas/EntityObj'
        msgdata:
          $ref: '#/components/schemas/MsgData'
    FraudSegmentRequestItem:
      type: object
      required:
        - portfolio
      properties:
        pan:
          $ref: '#/components/schemas/PAN'
        portfolio:
          type: string
          maxLength: 14
          example: 'FIB1234567890'
        segmentID:
          $ref: '#/components/schemas/SegmentID'
        segmentValue:
          type: string
          example: 'S'
        startDateFrom:
          $ref: '#/components/schemas/DateObj'
        startDateTo:
          $ref: '#/components/schemas/DateObj'
        endDateFrom:
          $ref: '#/components/schemas/DateObj'
        endDateTo:
          $ref: '#/components/schemas/DateObj'
        addedByUser:
          type: string
          maxLength: 9
          example: 'venkat'
    FraudSegmentHistoryRequestItem:
      type: object
      required:
        - portfolio
        - pageNumber
        - pageSize
      properties:
        pan:
          $ref: '#/components/schemas/PAN'
        portfolio:
          type: string
          maxLength: 14
          example: 'FIB1234567890'
        segmentID:
          $ref: '#/components/schemas/SegmentID'
        segmentValue:
          type: string
          example: 'S'
        startDateFrom:
          $ref: '#/components/schemas/DateObj'
        startDateTo:
          $ref: '#/components/schemas/DateObj'
        endDateFrom:
          $ref: '#/components/schemas/DateObj'
        endDateTo:
          $ref: '#/components/schemas/DateObj'
        addedByUser:
          type: string
          maxLength: 9
          example: 'venkat'
        pageNumber:
          type: number
          description: Page number to retrieve the records matching given criteria.
          example: 0
        pageSize:
          type: number
          description: Number of records to be returned per page.
          example: 100
    FraudSegmentActiveCountRequest:
      type: object
      required:
        - portfolio
      properties:
        pan:
          $ref: '#/components/schemas/PAN'
        portfolio:
          type: string
          maxLength: 14
          example: 'FIB1234567890'
        segmentID:
          $ref: '#/components/schemas/SegmentID'
        segmentValue:
          type: string
          example: 'S'
        startDateFrom:
          $ref: '#/components/schemas/DateObj'
        startDateTo:
          $ref: '#/components/schemas/DateObj'
        endDateFrom:
          $ref: '#/components/schemas/DateObj'
        endDateTo:
          $ref: '#/components/schemas/DateObj'
        addedByUser:
          type: string
          maxLength: 9
          example: 'venkat'
    FraudSegmentResponse:
      type: object
      properties:
        segments:
          type: array
          items:
            $ref: '#/components/schemas/FraudSegmentResponseItem'
    FraudSegmentPagedResponse:
      type: object
      properties:
        total:
          type: integer
          example: 2000
        segments:
          type: array
          items:
            $ref: '#/components/schemas/FraudSegmentResponseItem'
    FraudSegmentResponseItem:
      type: object
      properties:
        pan:
          $ref: '#/components/schemas/PAN'
        segmentID:
          $ref: '#/components/schemas/SegmentID'
        segmentValue:
          type: string
          maxLength: 1
          example: 'S'
        startDate:
          $ref: '#/components/schemas/DateObj'
        endDate:
          $ref: '#/components/schemas/DateObj'
        addedByUser:
          type: string
          maxLength: 9
          example: 'venkat'
    FraudSegmentHistoryResponse:
      type: object
      properties:
        segments:
          type: array
          items:
            $ref: '#/components/schemas/FraudSegmentHistoryResponseItem'
    FraudSegmentHistoryPagedResponse:
      type: object
      properties:
        total:
          type: integer
          example: 2000
        segments:
          type: array
          items:
            $ref: '#/components/schemas/FraudSegmentHistoryResponseItem'
    FraudSegmentHistoryResponseItem:
      type: object
      properties:
        pan:
          $ref: '#/components/schemas/PAN'
        segmentID:
          $ref: '#/components/schemas/SegmentID'
        segmentValue:
          type: string
          maxLength: 1
          example: 'S'
        startDate:
          $ref: '#/components/schemas/DateObj'
        endDate:
          $ref: '#/components/schemas/DateObj'
        addedByUser:
          type: string
          maxLength: 9
          example: 'venkat'
    FraudSegmentEndRequestPayload:
      type: object
      properties:
        portfolio:
          type: string
          maxLength: 14
          example: 'FIB1234567890'
        segmentID:
          $ref: '#/components/schemas/SegmentID'
        endDate:
          $ref: '#/components/schemas/DateObj'
    PAN:
      type: object
      description: The Primary Account Number
      properties:
        plainText:
          type: string
          maxLength: 19
    SegmentID:
      type: string
      maxLength: 1
      enum:
        - '1'
        - '2'
        - '3'
        - '4'
        - '5'
      example: '1'
    DateObj:
      type: string
      maxLength: 18
      pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{2}'
      description: 'From Date means starting the date range from the beginning of that day 12:00:00 AM and format is  yyyy-MM-dd:HH24:mm:ss'
      example: '2023-05-21:21:54:16'
    EntityObj:
      type: object
      properties:
        exclusionId:
          type: string
          maxLength: 15
    MsgData:
      type: object
      description: |
        The response message
        00 - Success;
        01 - Request Data Not Found;
        02 - Backend System Error;
        03 - Bad request data, missing fields;
        98 - No response received;
        99 - Other error;
      properties:
        code:
          type: string
          maxLength: 2
        enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '98'
            - '99'
          text:
            type: string
            description: The message text
            maxLength: 128
            enum:
              - 'Success'
              - 'Request Data Not Found'
              - 'Backend System Error'
              - 'Bad request data, missing fields'
              - 'No response received'
              - 'Other error'
